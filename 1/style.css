/* @import url(https://fonts.google.com/css?family=Roboto:300,300,500,600,700,800,900); */
@font-face {
  font-family: 'fortnite'; /* Provide a suitable name */
  src: url('../fonts/Fortnite.ttf') format('truetype'); /* Update the path to your font file */
  /* You can also specify additional font formats for better compatibility */
}

*{
  margin: 0;
  padding: 0;
  font-family: 'fortnite', sans-serif;
  color: white;
  font-weight: 500;
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background: #101010;
}

.top-bar {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  display: flex;
  justify-content: center;
  background-color: #333; /* Background color of the top bar */
  padding: 10px; /* Adjust the padding as needed */
}

.icon {
            fill: white; /* Icon color */
            width: 60px; /* Icon width */
            height: 48px; /* Icon height */
            margin-right: 10px; /* Adjust the spacing between icons */
}
.iconText {
  color: white; /* Text color */
  /* font-weight: bold; */
  font-size: 48px;
  margin-right: 30px; /* Adjust the spacing between icons */
  font-family: 'fortnite';
}   

.container {
  position: relative;
  width: 590px;
  display: flex;
  justify-content: space-around;
}

.container .card {
  position: relative;
  width: 259px;
  background: linear-gradient(0deg, #1b1b1b, #222, #1b1b1b);
  display: flex;
  justify-content: center;
  align-items: center;
  height: 300px;
  border-radius: 4px;
  text-align: center;
  overflow: hidden;
  transition: 0.5s;
  margin-bottom: 30px;
}
.front, 
.back {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  transition: transform 0.6s ease;
  text-align: left;
}
.front .box {
  padding: 0px;
  display: flex;
  flex-direction: column;
  justify-content: flex-start; 
  align-items: center; 
}

.back {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: stretch;
  color: #fff;
  transform: rotateY(180deg);
}
.card.clicked .front {
  transform: rotateY(180deg);
}
.card.clicked .back {
  transform: rotateY(0deg);
}





.container .card:hover {
  transform: translateY(-10px);
  box-shadow: 0 15px 35px rgba(0, 0, 0, .5);
}

.container .card:before {
  content: '';
  position: absolute;
  top: 0;
  left: -50%;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, .03);
  pointer-events: none;
  z-index: 1;
}

.percent {
  position: relative;
  width: 80px;
  height: 80px;
  border-radius: 50%;
  box-shadow: inset 0 0 25px #000;
  background: #222;
  z-index: 1000;
  top: 10px;
  /* left: calc(50% - 75px); */
}

.percent .number {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
}

.percent .number h2 {
  color: white;
  font-weight: 500;
  font-size: 40px;
  transition: 0.5s;
}

.card:hover .percent .number h2 {
  color: #fff;
  font-size: 60px;
}

.percent .number h2 span {
  font-size: 24px;
  color: white;
  transition: 0.5s;
}

.card:hover .percent .number h2 span {
  color: #fff;
}

.text {
  position: relative;
  color: #fff;
  margin-top: 20px;
  font-weight: 500;
  font-size: 18px;
  letter-spacing: 1px;
  text-transform: uppercase;
  transition: 0.5s;
}

.card:hover .text {
  color: #fff;
}

svg {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

svg circle
{
  width: 100%;
  height: 100%;
  fill: none;
  stroke: #191919;
  stroke-width: 7;
  stroke-linecap: round;
}

svg circle:nth-child(2) {
  stroke-dasharray: 0; 
  stroke-dashoffset: 0;
}
.greater-than-0 svg circle:nth-child(2) {
  stroke-dasharray: calc(251 - var(--circle)) var(--circle);
  stroke: white;
}

.greater-than-20 svg circle:nth-child(2) {
  stroke-dasharray: calc(251 - var(--circle)) var(--circle);
  stroke: rgb(30, 227, 23);
}
.greater-than-40 svg circle:nth-child(2) {
  stroke-dasharray: calc(251 - var(--circle)) var(--circle);
  stroke: yellow;
}
.greater-than-80 svg circle:nth-child(2) {
  stroke-dasharray: calc(251 - var(--circle)) var(--circle);
  stroke: orange;
}

.greater-than-90 svg circle:nth-child(2) {
  stroke-dasharray: calc(251 - var(--circle)) var(--circle);
  stroke: red;
}

.handshake {
  fill:#A9A9A9;
  width: 23%; /* set the width to 50% */
  height: auto; /* set the height to auto */
  /*display: block; /* set display to block */
  margin: auto; 

}
.tienda {
  cursor: pointer;

}
.compass {
  fill: #A9A9A9;
  width: 17%; /* set the width to 50% */
  height: auto; /* set the height to auto */
  /*display: block; /* set display to block */
  margin: auto; 

}
.briefcase {
  fill: #A9A9A9;
  width: 17%; /* set the width to 50% */
  height: auto; /* set the height to auto */
  /*display: block; /* set display to block */
  margin: auto; 

}
.athlete {
  fill: #A9A9A9;
  width: 20%; /* set the width to 50% */
  height: auto; /* set the height to auto */
  /*display: block; /* set display to block */
  margin: auto; 

}

ul {
  list-style-position: outside;
  padding-left: 30px;
  line-height: 1.5;
}


/* #astronaut1 {
  display: none;
}

#astronaut2 {
  display: none;
} */

/* Apply grayscale and transparency to the SVG image */
#mountain {
  filter: grayscale(100%); /* Convert to grayscale */
  opacity: 0.25; /* Set the transparency (0.0 to 1.0) */
}
#stars {
  filter: grayscale(100%); /* Convert to grayscale */
  opacity: 0.25; /* Set the transparency (0.0 to 1.0) */
}

#heart {
  filter: grayscale(100%); /* Convert to grayscale */
  opacity: 0.25; /* Set the transparency (0.0 to 1.0) */
}
#king {
  filter: grayscale(100%); /* Convert to grayscale */
  opacity: 0.25; /* Set the transparency (0.0 to 1.0) */
}

#viking {
  filter: grayscale(100%); /* Convert to grayscale */
  opacity: 0.25; /* Set the transparency (0.0 to 1.0) */
}

#skull {
  filter: grayscale(100%); /* Convert to grayscale */
  opacity: 0.25; /* Set the transparency (0.0 to 1.0) */
}
#thunder {
  filter: grayscale(100%); /* Convert to grayscale */
  opacity: 0.25; /* Set the transparency (0.0 to 1.0) */
}
#poisson {
  filter: grayscale(100%); /* Convert to grayscale */
  opacity: 0.25; /* Set the transparency (0.0 to 1.0) */
}
